openapi: 3.0.3

info:
  title: Account API
  description: API for interacting with account APIs
  version: 0.1.0
servers:
  - url: "https://account.alexslater.io"
    description: Production API endpoint for the account API

paths:
  /health:
    get:
      operationId: get-health
      description: healthcheck endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${healthcheck_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"
  /accounts:
    get:
      operationId: list-accounts
      description: List accounts endpoint
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
      security:
        - CognitoAuth: []
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${list_accounts_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-api-key-source: "HEADER"
    post:
      operationId: create-account
      description: Create account endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
      security:
        - CognitoAuth: []
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${create_account_arn}/invocations"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"
components:
  securitySchemes:
    CognitoAuth:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: COGNITO_USER_POOLS
      x-amazon-apigateway-authorizer:
        type: "COGNITO_USER_POOLS"
        providerARNs:
          - ${cognito_user_pool_arn}
  schemas:
    id:
      type: string
    Message:
      type: object
      properties:
        message:
          type: string
    Account:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/id"
    Accounts:
      type: array
      items:
        $ref: "#/components/schemas/Account"
    CreateAccountRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
      required:
        - firstName
        - lastName
